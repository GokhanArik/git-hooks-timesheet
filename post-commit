#!/usr/bin/env ruby

require 'rubygems'
require 'git'
require 'fileutils'
require 'nokogiri'

@regular_expression = /(\d{1}\.\d{1})(?:\.\d{1})*(?:\s*[-]\s*)(\d{1,2})/
@timesheet = "timesheet.txt"

def get_commit_message()
    @message = `git log -1 HEAD --pretty=format:%s`
end

def parse_commit_message
    if match = @message.match(@regular_expression)
        @story, @hours = match.captures
    end
end

def update_timesheet
    begin
        file = File.open("/Users/admin/Desktop/#{@timesheet}", "a")
        time = Time.now 
        file << "#{time.strftime("%A").green}: #{@story} - #{@hours} hours\n"
    rescue IOError => e
        puts "some error occur, dir not writable etc."
    ensure
        file.close unless file.nil?
    end
end

class String
    def black;          "\033[30m#{self}\033[0m" end
    def red;            "\033[31m#{self}\033[0m" end
    def green;          "\033[32m#{self}\033[0m" end
    def brown;          "\033[33m#{self}\033[0m" end
    def blue;           "\033[34m#{self}\033[0m" end
    def magenta;        "\033[35m#{self}\033[0m" end
    def cyan;           "\033[36m#{self}\033[0m" end
    def gray;           "\033[37m#{self}\033[0m" end
    def bg_black;       "\033[40m#{self}\033[0m" end
    def bg_red;         "\033[41m#{self}\033[0m" end
    def bg_green;       "\033[42m#{self}\033[0m" end
    def bg_brown;       "\033[43m#{self}\033[0m" end
    def bg_blue;        "\033[44m#{self}\033[0m" end
    def bg_magenta;     "\033[45m#{self}\033[0m" end
    def bg_cyan;        "\033[46m#{self}\033[0m" end
    def bg_gray;        "\033[47m#{self}\033[0m" end
    def bold;           "\033[1m#{self}\033[22m" end
    def reverse_color;  "\033[7m#{self}\033[27m" end
end

get_commit_message
parse_commit_message

if @story != nil and @hours != nil
    update_timesheet
    puts "Timesheet updated : Story #{@story.blue} : #{@hours.red} hours"
end


